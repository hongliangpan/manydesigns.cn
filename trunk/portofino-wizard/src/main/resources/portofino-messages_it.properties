#Wizard
next>> = Avanti >>
<<previous = << Indietro
finish = Termina

show.advanced.options = Mostra opzioni avanzate
additional.drivers.can.be.downloaded = Eventuali driver aggiuntivi possono essere scaricati e installati nelle librerie del vs. application server.
there.is.already.a.database.named._ = Esiste gi\u00E0 un database di nome {0}
couldnt.read.schema.names.from.db._ = Impossibile leggere i nomi degli schemi dal db: {0}
select.at.least.a.schema = Selezionare almeno uno schema
error.in.database.synchronization._ = Errore nella sincronizzazione del database: {0}
could.not.save.model._ = Impossibile salvare il modello: {0}
could.not.create.pages._ = Impossibile creare le pagine: {0}
couldnt.create.directory = Impossibile creare la directory {0}
directory.exists.page.not.created._ = La directory esiste, la pagina non \u00E8 stata creata ({0})
couldnt.set.up.user.management._ = Impossibile creare la gestione utenti: {0}
no.page.will.be.generated = Non sar\u00E0 generata nessuna pagina
schema._.was.already.configured = Lo schema {0} era gi\u00E0 configurato: le pagine esistenti non verranno aggiornate

use.an.existing.database.connection = Usa una connessione esistente ad un database
or.create.a.new.one.choose.its.type = o creane una nuova (scegli il tipo):
create.a.new.connection.choose.type = Crea una nuova connessione (scegli il tipo):
found.schemas = Schemi rilevati:
select.root.tables = Selezionare le tabelle radice

users.and.groups.tables = Tabelle utenti e gruppi

warning.configuring.user.management.will.overwrite = Attenzione: configurando la gestione utenti verr\u00E0 sovrascritto il security.groovy

users.table.setup = Configurazione tabella utenti
users.table = tabella degli utenti
password.encryption.algorithm = algoritmo crittografico per la password
plain.text = In chiaro
md5.base64.encoded = MD5 (codifica Base64)
md5.hex.encoded = MD5 (codifica esadecimale)
sha1.base64.encoded.portofino3 = SHA-1 (codifica Base64) - Portofino 3
sha1.hex.encoded = SHA-1 (codifica esadecimale)
user.id.property = propriet\u00E0 id utente
username.property = propriet\u00E0 nome utente
password.property = propriet\u00E0 password
email.property = propriet\u00E0 email
token.property = propriet\u00E0 token

groups.tables.setup = Configurazione tabelle gruppi
groups.table = Tabella dei gruppi
name.of.the.administrators.group = nome del gruppo amministratori

user-group.join.table = Tabella di collegamento utente-gruppo
property.that.links.to.user = propriet\u00E0 di collegamento con l''utente
property.that.links.to.group = propriet\u00E0 di collegamento con il gruppo

select.the.generation.strategy = Seleziona la strategia da adottare:
dont.generate.anything = Non generare nulla
automatic = Automatica
manual.choose.which.pages.will.be.created = Manuale (scegli quali pagine creare)

generate.a.calendar.page = Genera una pagina calendario
press.finish.to.build.the.application = Premi il bottone Termina per creare l'applicazione. \
  L'operazione potrebbe richiedere diversi minuti.
application.created = L''applicazione \u00E8 stata creata. Ora la puoi navigare e personalizzare!
user.management.has.been.configured.please.edit.security.groovy = \
  La gestione utenti \u00E8 stata configurata. Ricordati di modificare il file Security.groovy coerentemente\
  con l''ambiente in cui \u00E8 in esecuzione l''applicazione e di rimuovere l''utente admin cablato per il wizard. \
  L'utente \u00E8 stato fatto uscire dal sistema automaticamente; si prega di effettuare un nuovo login.

step._ = Passo {0}
connect.to.your.database = Connettiti al database
select.the.database.schemas.to.import = Seleziona gli schemi da importare
set.up.user.management = Configura la gestione utenti
customize.user.management = Personalizza la gestione utenti
generate.pages = Genera le pagine
build.the.application = Crea l''applicazione!